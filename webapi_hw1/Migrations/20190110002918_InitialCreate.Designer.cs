// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi_hw1.DBHelper;

namespace webapi_hw1.Migrations
{
    [DbContext(typeof(AccountDbContext))]
    [Migration("20190110002918_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("webapi_hw1.DBHelper.AccountType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountDescription");

                    b.HasKey("ID");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new { ID = 1, AccountDescription = "Admin" },
                        new { ID = 2, AccountDescription = "User" }
                    );
                });

            modelBuilder.Entity("webapi_hw1.DBHelper.ClientAccount", b =>
                {
                    b.Property<int>("ClientID");

                    b.Property<int>("AccountID");

                    b.Property<int>("Balance");

                    b.HasKey("ClientID", "AccountID");

                    b.HasAlternateKey("AccountID", "ClientID");

                    b.ToTable("ClientAccounts");

                    b.HasData(
                        new { ClientID = 1, AccountID = 2, Balance = 100 },
                        new { ClientID = 2, AccountID = 1, Balance = 900 }
                    );
                });

            modelBuilder.Entity("webapi_hw1.DBHelper.ClientProfile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("ID");

                    b.ToTable("ClientProiles");

                    b.HasData(
                        new { ID = 1, FirstName = "Tina", LastName = "Chu" },
                        new { ID = 2, FirstName = "Max", LastName = "Gateman" }
                    );
                });

            modelBuilder.Entity("webapi_hw1.DBHelper.ClientAccount", b =>
                {
                    b.HasOne("webapi_hw1.DBHelper.AccountType", "AccountType")
                        .WithMany("ClientAccounts")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("webapi_hw1.DBHelper.ClientProfile", "ClientProfile")
                        .WithMany("ClientAccounts")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
